generator client {
  provider = "prisma-client-js"
  output   = "build"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id               String              @id @default(uuid())
  email            String              @unique
  name             String?
  bio              String?
  password         String?
  photo            String?
  banner           String?
  googleId         String?             @unique
  googleUrl        String?
  githubId         String?             @unique
  githubUrl        String?
  requireEmailCode Boolean             @default(false)
  emailCode        String?
  targetEmail      String?
  targetCode       String?
  active           Boolean             @default(true)
  freeMessagesRemaining Int            @default(5)
  threads          ThreadParticipant[]
  dateCreated      DateTime            @default(now())
  dateUpdated      DateTime            @updatedAt

  @@index([dateCreated])
  @@index([dateUpdated])
}

model Thread {
  id            String              @id @default(uuid())
  title         String?
  lastMessageId String?
  lastMessageAt DateTime?           @map("last_message_at")
  archived      Boolean             @default(false)
  participants  ThreadParticipant[]
  dateCreated   DateTime            @default(now())
  dateUpdated   DateTime            @updatedAt

  @@index([lastMessageAt])
}

model ThreadParticipant {
  threadId   String
  accountId  String
  joinedAt   DateTime  @default(now())
  lastReadId String?
  pinned     Boolean   @default(false)
  mutedUntil DateTime?
  thread     Thread    @relation(fields: [threadId], references: [id])
  account    Account   @relation(fields: [accountId], references: [id])

  @@id([threadId, accountId])
  @@index([accountId, mutedUntil])
}
